#? This is a basic workflow to help you get started with Actions
name: CI-Dispatcher
#? Controls when the workflow will run
on:
  workflow_dispatch:
  # schedule:
  #   #?        ┌───────────── minute (0 - 59)
  #   #?        │ ┌───────────── hour (0 - 23)
  #   #?        │ │ ┌───────────── day of the month (1 - 31)
  #   #?        │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
  #   #?        │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
  #   #?        │ │ │ │ │
  #   #?        │ │ │ │ │
  #   #?        │ │ │ │ │
  #   #?        * * * * *,-
  #   - cron: "30 2 * * 1,3,5"

jobs:
  release_dispatch:
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
    steps:
      - name: Fetch Repository Release Information
        #? https://docs.github.com/en/rest/releases/releases?apiVersion=2022-11-28#get-the-latest-release
        id: latest-release
        run: |
          echo "release_info=$(gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{env.OWNER}}/${{env.REPOSITORY}}/releases/latest)\n" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: owncloud
          REPOSITORY: ocis

      - name: Extract tag_name
        id: extract-tag
        run: |
          echo "tag_name=${{ fromJson(steps.latest-release.outputs.release_info).tag_name }}" >> $GITHUB_OUTPUT
          #? ${string//substring/replacement}
          export TAG=${${{ fromJson(steps.latest-release.outputs.release_info).tag_name }}//v/}
          echo "tag=${TAG}"
          echo "tag=$("${{ fromJson(steps.latest-release.outputs.release_info).tag_name }}" | tr -d 'v')" >> $GITHUB_OUTPUT

      - name: Repository Dispatch
        #? https://github.com/marketplace/actions/repository-dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          #? It needs the following permissions on the target repositories:
          #?    - contents: read & write
          #?    - metadata: read only (automatically selected when selecting the contents permission)
          # token: ${{ secrets.PAT }}
          # repository: username/my-repo
          event-type: dispatch-released
          client-payload: '{"tag_name": "${{ steps.extract-tag.outputs.tag_name }}", "tag": "${{ steps.extract-tag.outputs.tag }}"}'
