## Static configuration
# # define entrypoints
# - "--entryPoints.http.address=:80"
# - "--entryPoints.http.http.redirections.entryPoint.to=https"
# - "--entryPoints.http.http.redirections.entryPoint.scheme=https"
# - "--entryPoints.https.address=:443"
#? Reference: https://dev.to/bgalvao/traefik-lets-encrypt-cloudflare-36fj
entryPoints:
  dashboard:
    address: ":8090"
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
  websecure:
    address: ":443"

# - "--log.level=${TRAEFIK_LOG_LEVEL:-ERROR}"
log:
  level: "${TRAEFIK_LOG_LEVEL:-ERROR}"

#? enable dashboard
# - "--api.dashboard=true"
api:
  dashboard: true
  insecure: true

#? access log
# - "--accessLog=true"
# - "--accessLog.format=json"
# - "--accessLog.fields.headers.names.X-Request-Id=keep"
accessLog:
  format: json
  fields:
    headers:
      names:
        X-Request-Id: keep

#? letsencrypt configuration
# - "--certificatesResolvers.http.acme.email=${TRAEFIK_ACME_MAIL:-example@example.org}"
# - "--certificatesResolvers.http.acme.storage=/certs/acme.json"
# - "--certificatesResolvers.http.acme.httpChallenge.entryPoint=http"

# - '--certificatesresolvers.le.acme.email=${ACME_EMAIL}'
#     - '--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json'
#     # TLS challenge serves the certificates back to the CA in order to renew them
#     - '--certificatesresolvers.le.acme.tlschallenge=true'
#     # Optionally use the staging server to prevent exhausting rate limits
#     - '--certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory'
certificatesResolvers:
  le:
    acme:
      email: "${TRAEFIK_ACME_MAIL:-example@example.org}"
      storage: $SNAP/traefik-providers/certs/acme.json
      httpChallenge:
        # used during the challenge
        entryPoint: web
      #? TLS challenge serves the certificates back to the CA in order to renew them
      #     - '--certificatesresolvers.le.acme.tlschallenge=true'
      tlsChallenge: {}
      #? Optionally use the staging server to prevent exhausting rate limits
      # - '--certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory'
      caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"

providers:
  # Enable the file provider to define routers / middlewares / services in file
  providers:
  file:
    directory: "${SNAP}/traefik-providers/providers"
    watch: true
  # file:
  #   directory: /etc/traefik/providers/project-name.yaml
