# - "traefik.enable=${TRAEFIK_DASHBOARD:-false}"
# - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH_USERS:-admin:$$apr1$$4vqie50r$$YQAmQdtmz5n9rEALhxJ4l.}" # defaults to admin:admin
# - "traefik.http.routers.traefik.entrypoints=https"
# - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN:-traefik.owncloud.test}`)"
# - "traefik.http.routers.traefik.middlewares=traefik-auth"
# - "traefik.http.routers.traefik.tls.certresolver=http"
# - "traefik.http.routers.traefik.service=api@internal"
#? traefik provider configuration
#? Reference: https://medium.com/@gembit.soultan/install-and-configure-traefik-proxy-from-binary-file-in-ubuntu-22-04-8ff85237fee3

http:
  routers:
    traefik:
      entryPoints:
        - websecure
      rule: "Host(`${TRAEFIK_DOMAIN:-traefik.owncloud.test}`)"
      service: "internal" # "internal@api"
      middlewares:
        - "traefik-auth"
      tls:
        #? will terminate the TLS request
        #! tls: {}
        certResolver: le
  middlewares:
    traefik-auth:
      basicAuth:
        users: #? defaults to admin:admin
          - "${TRAEFIK_BASIC_AUTH_USERS:-admin:$$apr1$$4vqie50r$$YQAmQdtmz5n9rEALhxJ4l.}" #? defaults to admin:admin

  services:
    # Define how to reach an existing service on our infrastructure
    internal:
      loadBalancer:
        servers:
          - url: http://127.0.0.1:8090
